esta es la pp 1
los comandos son
git init: lo usamos para determinar la carpeta en la que vamos a trabajar.

git status: lo usamos para saber si tenemos un archivo a침adido o borrado 
en nuestro proyecto, para saber en la rama en la que estamos y si tenemos commits.

git add: es para a침adir un archivo a nuestra rama seguidamente ponemos
 entre comillas el nombre de nuestro archivo o poner un punto para a침adir
  todos los archios de nuestra carpeta.

git rm: lo usamos para borrar un archivo que hayamos a침adido, para eliminarlo
 por completo de nuestra rama usamosgit rm --cached.

git commit: se usa para a침adir un commit a nuestra rama, tambi칠n podemos ponerle
 un -m seguidamente ponemos entre comillas nuestro ensaje.

git config: muestra configuraciones de git tambi칠n podemos usar --list para mostrar
 la configuraci칩n por defecto de nuestro git y si a침adimos --show-origin inhales
  nos muestra las configuraciones guardadas y su ubicaci칩n.

git config --global user.name: cambia de manera global el nombre del usuario,
 seguidamente ponemos entre comillas nuestro nombre.

git config --global user.email: cambia de manera global el email del usuario, 
seguidamente ponemos entre comillas nuestro nombre.

git log: se usa para ver la historia de nuestros archivos, los commits, 
el usuario que lo cambi칩, cuando se realizaron los cambios etc. seguidamente
 ponemos el nombre de nuestro archivo.

 Me devuelvo hasta ac치 para ahorrarles un dolor de cabeza m치s adelante 游땍 
 Por la clase 18 se van a enterar que GitHub cambi칩 algunas palabras clave. 
 Entre esas, cambi칩 el nombre de la rama principal, pasando de llamarse master a
  llamarse main. Esto les causar치 unos conflictos m치s adelante, 
 que pueden evitar desde ahora ejecutando este comando antes de iniciar cualquier repositorio:

 Por Buena practica ahora no se usa la rama (master) en cambio se usa la rama (main) en la documentaci칩n habla de que al momento de crear el repositorio desde la carpeta y en la linea de comando se pone : git branch -M main or git branch -M master main pero a mi no me permiti칩 hacerlo as칤, asi que si alguien presenta el mismo problema, que hice yo... me fui a la carpeta oculta de .git ==> al archivo HEAD lo abri con block de notas y cambie la palabra master por main as칤 queda:

Screenshot_3.png

le das atr치s (cd ..) y luego entras de nuevo 
a la carpeta del repo y ya veras los cambios de la palabra master por main